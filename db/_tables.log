\i tables/000_pretables.sql
--ok
\i tables/010_CreateTable_Golfer.sql
drop table if exists golfer cascade;
psql:tables/010_CreateTable_Golfer.sql:1: NOTICE:  table "golfer" does not exist, skipping
DROP TABLE
commit;
psql:tables/010_CreateTable_Golfer.sql:2: WARNING:  there is no transaction in progress
COMMIT
CREATE TABLE golfer
(
  golfer_id serial NOT NULL,
  last_update timestamp(3) without time zone,
  updated_by text,
  "name" character varying(25),
  CONSTRAINT golfer_pkey PRIMARY KEY (golfer_id)
)
WITH (
  OIDS=FALSE
);
psql:tables/010_CreateTable_Golfer.sql:13: NOTICE:  CREATE TABLE will create implicit sequence "golfer_golfer_id_seq" for serial column "golfer.golfer_id"
psql:tables/010_CreateTable_Golfer.sql:13: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "golfer_pkey" for table "golfer"
CREATE TABLE
commit;
psql:tables/010_CreateTable_Golfer.sql:14: WARNING:  there is no transaction in progress
COMMIT
\i tables/020_CreateTableGolfScore.sql
drop table if exists golf_score cascade;
psql:tables/020_CreateTableGolfScore.sql:1: NOTICE:  table "golf_score" does not exist, skipping
DROP TABLE
CREATE TABLE golf_score
(
  golf_score_id serial NOT NULL,
  last_update timestamp(3) without time zone,
  updated_by text,
  golf_score integer,
  golfer_id integer,
  game_dt date,
  CONSTRAINT golf_score_pkey PRIMARY KEY (golf_score_id),
  CONSTRAINT fk_golf_score_1 FOREIGN KEY (golfer_id)
      REFERENCES golfer (golfer_id) MATCH SIMPLE
      ON UPDATE RESTRICT ON DELETE RESTRICT
)
WITH (
  OIDS=FALSE
);
psql:tables/020_CreateTableGolfScore.sql:17: NOTICE:  CREATE TABLE will create implicit sequence "golf_score_golf_score_id_seq" for serial column "golf_score.golf_score_id"
psql:tables/020_CreateTableGolfScore.sql:17: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "golf_score_pkey" for table "golf_score"
CREATE TABLE
commit;
psql:tables/020_CreateTableGolfScore.sql:18: WARNING:  there is no transaction in progress
COMMIT
\i tables/999_posttables.sql
--post tables
--Custom types
drop type if exists golfer_summary cascade;
DROP TYPE
create  type golfer_summary as (golfer_id int, golfer_name varchar, golf_score float, last_date timestamp, first_date timestamp);
CREATE TYPE
drop type if exists type_label_value cascade;
DROP TYPE
create  type type_label_value as (tp  varchar, lbl varchar, val varchar);
CREATE TYPE
